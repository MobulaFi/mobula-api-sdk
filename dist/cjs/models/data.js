"use strict";
/**
 * MobulaLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.dataSchema = void 0;
var schema_1 = require("../schema");
exports.dataSchema = (0, schema_1.object)({
    id: ['id', (0, schema_1.optional)((0, schema_1.number)())],
    name: ['name', (0, schema_1.optional)((0, schema_1.string)())],
    symbol: ['symbol', (0, schema_1.optional)((0, schema_1.string)())],
    contracts: ['contracts', (0, schema_1.optional)((0, schema_1.array)((0, schema_1.nullable)((0, schema_1.string)())))],
    blockchains: ['blockchains', (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
    twitter: ['twitter', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    website: ['website', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    logo: ['logo', (0, schema_1.optional)((0, schema_1.string)())],
    price: ['price', (0, schema_1.optional)((0, schema_1.number)())],
    marketCap: ['market_cap', (0, schema_1.optional)((0, schema_1.number)())],
    liquidity: ['liquidity', (0, schema_1.optional)((0, schema_1.number)())],
    volume: ['volume', (0, schema_1.optional)((0, schema_1.number)())],
    description: ['description', (0, schema_1.optional)((0, schema_1.string)())],
    kyc: ['kyc', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    audit: ['audit', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    totalSupplyContracts: [
        'total_supply_contracts',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)()))),
    ],
    totalSupply: ['total_supply', (0, schema_1.optional)((0, schema_1.number)())],
    circulatingSupply: ['circulating_supply', (0, schema_1.optional)((0, schema_1.number)())],
    circulatingSupplyAddresses: [
        'circulating_supply_addresses',
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)())),
    ],
    discord: ['discord', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    maxSupply: ['max_supply', (0, schema_1.optional)((0, schema_1.number)())],
    chat: ['chat', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
});
//# sourceMappingURL=data.js.map