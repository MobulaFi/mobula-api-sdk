/**
 * MobulaLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, oneOf, Schema, validateAndMap } from '../../schema';
import { Asset, assetSchema } from '../asset';

/** This is a container type for one-of types. */
export type FetchAssetMetadataResponse = Asset | Asset[];

export const fetchAssetMetadataResponseSchema: Schema<FetchAssetMetadataResponse> = oneOf(
  [assetSchema, array(assetSchema)]
);

export namespace FetchAssetMetadataResponse {
  /**
  * Validation method to narrow down union type to Asset type case.
  *
  * This is Asset case.
  */
  export function isAsset(value: unknown): value is Asset {
    const validationResult = validateAndMap(value, assetSchema);
    return validationResult.errors === false;
  }

  /**
  * Validation method to narrow down union type to Asset[] type case.
  *
  * This is Array of Asset case.
  */
  export function isArrayOfAsset(value: unknown): value is Asset[] {
    if (!Array.isArray(value))
    {
      return false;
    };
    const validationResult = validateAndMap(value, array(assetSchema));
    return validationResult.errors === false;
  }
}
