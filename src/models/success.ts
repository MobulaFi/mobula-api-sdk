/**
 * MobulaLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, lazy, object, optional, Schema, string } from '../schema';
import { Tx, txSchema } from './tx';

export interface Success {
  amountOut?: string;
  error?: string;
  isAggregator?: boolean;
  protocol?: string;
  tx?: Tx;
  willFail?: boolean;
}

export const successSchema: Schema<Success> = object({
  amountOut: ['amountOut', optional(string())],
  error: ['error', optional(string())],
  isAggregator: ['isAggregator', optional(boolean())],
  protocol: ['protocol', optional(string())],
  tx: ['tx', optional(lazy(() => txSchema))],
  willFail: ['will_fail', optional(boolean())],
});
