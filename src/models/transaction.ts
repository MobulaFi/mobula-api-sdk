/**
 * MobulaLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  nullable,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { AssetTransaction, assetTransactionSchema } from './assetTransaction';

export interface Transaction {
  timestamp?: number;
  asset?: AssetTransaction;
  type?: string;
  methodId?: string | null;
  hash?: string;
  blockchain?: string;
  amount?: number;
  amountUsd?: number;
  to?: string;
  from?: string;
  txCost?: number;
}

export const transactionSchema: Schema<Transaction> = object({
  timestamp: ['timestamp', optional(number())],
  asset: ['asset', optional(lazy(() => assetTransactionSchema))],
  type: ['type', optional(string())],
  methodId: ['method_id', optional(nullable(string()))],
  hash: ['hash', optional(string())],
  blockchain: ['blockchain', optional(string())],
  amount: ['amount', optional(number())],
  amountUsd: ['amount_usd', optional(number())],
  to: ['to', optional(string())],
  from: ['from', optional(string())],
  txCost: ['tx_cost', optional(number())],
});
